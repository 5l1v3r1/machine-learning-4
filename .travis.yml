dist: trusty
sudo: required
language: python

##
## environment variables
##
## @PARALLEL, allow various tests to be run in parallel
## @COVERALLS_PARALLEL, update coveralls only when branch merged
##
env:
  - PARALLEL=lint
  - PARALLEL=frontend
  - PARALLEL=backend
  - COVERALLS_PARALLEL=true

##
## implement coveralls.io webhook
##
##     https://github.com/lemurheavy/coveralls-public/issues/1123#issuecomment-390699100
##     https://github.com/lemurheavy/coveralls-public/issues/1123#issuecomment-391030777
##
notifications:
  webhooks: https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN

## configurations
before_install:
  - chmod u+x test/linter
  - chmod u+x test/backend

## install packages
install:
  - pip install python-coveralls==2.9.0
  - ./test/linter install

## lint and test
script:
  - if [ "$PARALLEL" = 'lint' ]; then ./test/linter run; LINT_EXIT=$?; fi
  - if [ "$PARALLEL" = 'frontend' ]; then ./test/frontend run; LINT_EXIT=$?; fi
  - if [ "$PARALLEL" = 'backend' ]; then ./test/backend --norecycle --verbose; TEST_EXIT=$?; fi

##
## results: the following commands are run after linting, and tests have completed.
##
## Note: more information regarding the coverage-coverall implementation:
##
##       https://github.com/pytest-dev/pytest-cov/issues/146
##
after_success:
  - coverage combine
  - coveralls
  - if [ "$LINT_EXIT" -gt 0 ] && [ "$TEST_EXIT" -gt 0 ]; then echo "Lint ($LINT_EXIT) and Unit Tests failed" && exit 1; fi
  - if [ "$LINT_EXIT" -gt 0 ]; then echo "Lint Failed ($LINT_EXIT)" && exit 1; fi
  - if [ "$TEST_EXIT" -gt 0 ]; then echo 'Unit Tests Failed' && exit 1; fi
