dist: trusty
sudo: required
language: python

##
## environment variables
##
## @PARALLEL, allow various tests to be run in parallel
## @COVERALLS_PARALLEL, update coveralls only when branch merged
##
env:
  global:
    - COVERALLS_PARALLEL=true
    - LINT_EXIT=0
    - TEST_EXIT=0
  matrix:
    - PARALLEL=lint
    - PARALLEL=frontend
    - PARALLEL=backend

##
## implement coveralls.io webhook
##
##     https://github.com/lemurheavy/coveralls-public/issues/1123#issuecomment-390699100
##     https://github.com/lemurheavy/coveralls-public/issues/1123#issuecomment-391030777
##
notifications:
  webhooks: https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN

## configurations
before_install:
  - chmod u+x test/linter
  - chmod u+x test/frontend
  - chmod u+x test/backend

## install packages
install:
  - pip install python-coveralls==2.9.0
  - ./test/linter install

## lint and test
script:
  - if [ "$PARALLEL" = 'lint' ]; then
      ./test/linter run; LINT_EXIT=$?;
    fi
  - if [ "$PARALLEL" = 'frontend' ]; then
      ./test/frontend --norecycle --verbose; FRONTEND_EXIT=$?;
    fi
  - if [ "$PARALLEL" = 'backend' ]; then
      ./test/backend --norecycle --verbose; BACKEND_EXIT=$?;
    fi

##
## results: the following commands are run after linting, and tests have completed.
##
## Note: more information regarding the coverage-coverall implementation:
##
##       https://github.com/pytest-dev/pytest-cov/issues/146
##
after_success:
  - if [ "$LINT_EXIT" -gt 0 ]; then
       echo "Lint failed ($LINT_EXIT)" && exit 1;
    fi
  - if [ "$FRONTEND_EXIT" -gt 0 ]; then
       echo 'Frontent tests failed' && exit 1;
    fi
  - if [ "$BACKEND_EXIT" -gt 0 ]; then
       echo 'Backend tests failed' && exit 1;
    fi
  - if [ "$PARALLEL" = 'backend' ]; then
      coverage combine && coveralls
    fi
