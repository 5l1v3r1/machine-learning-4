sudo: required

language: python

## allows 'docker' command
services:
  - docker

## build docker container for unit testing.
before_install:
  - docker ps -a
  - docker build -t ubuntu/trusty .

## install packages for linting
#
#  @trusty-backports, allows additional packages (i.e. shellcheck) to be installed
#
#  Note: unit testing is performed within the docker container, which is
#        defined from the Dockerfile.
install:
  - sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ trusty-backports restricted main universe"
  - pip install flake8
  - npm install -g jshint
  - npm install jscs -g
  - gem install scss_lint
  - npm install -g bootlint
  - gem install puppet-lint
  - gem install r10k
  - npm install jsonlint -g
  - gem install csvlint
  - sudo apt-get update
  - sudo apt-get install libxml2-utils
  - gem install mdl
  - sudo apt-get install shellcheck
  - npm install -g eslint babel-eslint@6.0.0-beta.6
  - npm install -g eslint-plugin-react

## implement linting
#
#  @puppet-lint, the following issue needs to be checked if it has been
#      resolved, so the '--no-ensure_first_param-check' abusive flag
#      implementation (below) can be removed:
#
#      - https://github.com/rodjek/puppet-lint/issues/410
#
#  Note: unit testing is performed within the docker container, which is
#        defined from the Dockerfile.
script:
  - flake8 .
  - jshint --verbose src/js/*.js --config test/config/jshint.json --exclude-path test/config/.jshintignore
  - jscs . --config test/config/.jscs.json
  - scss-lint src/scss/*.scss
  - bootlint interface/templates/*.html
  - puppet-lint --no-ensure_first_param-check --no-autoloader_layout-check --no-variable_scope-check puppet/environment/development/manifests
  - puppet-lint --no-ensure_first_param-check --no-variable_scope-check puppet/environment/development/modules
  - (cd puppet/environment/development/ && r10k puppetfile check)
  - (cd test/ && r10k puppetfile check)
  - find interface/static/data/json -name '*.json' -exec jsonlint -q {} \; -print
  - find interface/static/data/csv -name '*.csv' -exec csvlint {} \;
  - xmllint --noout interface/static/data/xml/*.xml --schema interface/static/data/xml/dataset.xsd
  - xmllint --noout interface/static/data/xml/*.xsd
  - mdl . --style test/config/markdown.rb
  - find . -type f -exec grep -l '^#!/bin/bash' {} + | xargs shellcheck
  - find . -name '*.sh' -type f -exec shellcheck {} \;
  - eslint . --ext=jsx -c test/config/eslint.json
