#!/bin/bash

## variables
##
## @PUPPETSERVER_FQDN, this needs match the result of running the 'hostnamectl' command
##     from the environment running the puppetserver / puppetmaster.
##
## @PUPPETSERVER_IP, address that corresponds to the puppetserver.
##

## local variables
PUPPETSERVER_FQDN="$1"
PUPPETSERVER_IP="$2"
HOSTNAME="$3"
FQDN="$4"
IP="$5"
NAMESERVER="$6"
NETMASK="$7"

## local variable: use default if none provided
if [[ $7 ]]; then
    GATEWAY=$(route -n | grep 'UG[ \t]' | awk '{print $2}')
else
    GATEWAY="$8"
fi

## set fqdn
sudo sh -c "printf \"$PUPPETSERVER_IP\t\t$PUPPETSERVER_FQDN\n\" >> /etc/hosts"
sudo sh -c "printf \"$IP\t\t$FQDN\t$HOSTNAME\n\" >> /etc/hosts"

## static ip
if [ ! -d /vagrant ] && [ ! -d /vagrant/.git ] && [ ! -d /vagrant/.vagrant ]; then
    sudo sh -c 'printf "auto eth0\n" > /etc/network/interfaces'
    sudo sh -c 'printf "iface eth0 inet static\n" >> /etc/network/interfaces'
    sudo sh -c "printf \"\t\taddress\t$IP\n\" >> /etc/network/interfaces"
    sudo sh -c "printf \"\t\tnetmask\t$NETMASK\n\" >> /etc/network/interfaces"
    sudo sh -c "printf \"\t\tgateway\t$GATEWAY\n\" >> /etc/network/interfaces"
    sudo sh -c "printf \"\t\tdns-nameservers\t$NAMESERVER\n\" >> /etc/network/interfaces"
fi

## set hostname
sudo hostname "$HOSTNAME"
sudo sh -c "echo \"$HOSTNAME\" > /etc/hostname"

## restart network
sudo ifdown eth0 && sudo ifup eth0
