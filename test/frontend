#!/bin/bash

## local variables
DOCKER_VERSION='18.03.0~ce-0~ubuntu'
CONTAINER_VERSION='0.7'

## local variables: reusable unit tests
if [ "$1" = '--recycle' ]; then
    RECYCLE='true'
else
    RECYCLE='false'
fi

## local variables: perform verbose 'docker build', or just 'docker run'
if [ "$2" = '--verbose' ] || [ "$2" = '-v' ] || [ "$2" = '-V' ]; then
    BUILD_SPEED='verbose'
else
    BUILD_SPEED='fast'
fi

## re-runnable: the following allows this script to be re-runnable within the
##              vagrant environment:
##
##   - stop all docker containers
##   - remove all docker containers
##   - remove all docker images
##   - remove all docker volumes
##   - delete all docker networks
##
if [ "$RECYCLE" = 'true' ] && which docker >/dev/null 2>&1; then
    sudo docker ps -q | xargs -r docker kill
    sudo docker ps -a -q | xargs -r docker rm
    sudo docker images -q -f dangling=true | xargs -r docker rmi
    sudo docker volume ls -qf dangling=true | xargs -r docker volume rm
    sudo docker network ls -q | xargs -r docker network rm
fi

## install docker to specific version
##
## Note: we install docker per dockers official documentation:
##
##       https://docs.docker.com/engine/installation/linux/ubuntu/
##
if ! sudo apt-cache policy docker-ce | grep -q "$DOCKER_VERSION"; then
    sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository\
        "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get -y update
    sudo apt-get -y install docker-ce="$DOCKER_VERSION"
fi

## run directly from dockerhub
if [ "$BUILD_SPEED" = 'fast' ]; then
    ## run unit test(s)
    ##
    ## @docker run:
    ##     -d, run container in background and print container ID
    ##     -t, allocate pseudo-tty instead of default tty to running container
    ##
    sudo docker run\
        --name browserify\
        -dt "jeff1evesque/ml-browserify:${CONTAINER_VERSION}" npm run test:coveralls

## build from local dockerfiles
else
    ## build docker container(s)
    sudo docker build -f dockerfile/browserify.dockerfile -t ml-browserify .

    ## run unit test(s)
    ##
    ## @docker run:
    ##     -d, run container in background and print container ID
    ##     -t, allocate pseudo-tty instead of default tty to running container
    ##
    sudo docker run\
        --name browserify\
        -dt ml-browserify npm run test:coveralls
fi

## clean up vagrant environment: harddisk space is limited
##
##   - stop all docker containers
##   - remove all docker containers
##   - remove all docker images
##   - remove all docker volumes
##   - delete all docker networks
##
if [ "$RECYCLE" = 'true' ]; then
    sudo docker ps -q | xargs -r docker kill
    sudo docker ps -a -q | xargs -r docker rm
    sudo docker images -q -f dangling=true | xargs -r docker rmi
    sudo docker volume ls -qf dangling=true | xargs -r docker volume rm
    sudo docker network ls -q | xargs -r docker network rm
fi
