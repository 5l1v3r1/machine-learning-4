#!/bin/bash

## local variables
CMD="$1"

if [ "$2" ]; then
    BASEDIR="$2"
else
    BASEDIR='.'
fi

## install linters
if [ "$CMD" = 'install' ]; then
    sudo apt-get install ruby=1:1.9.3.4
    pip install flake8==2.5.4
    gem install scss_lint -v 0.54.0
    npm install -g bootlint@0.14.2
    gem install puppet-lint -v 1.1.0
    gem install r10k -v 2.2.0
    npm install -g jsonlint@1.6.2
    gem install csvlint -v 0.3.0
    sudo apt-get update
    sudo apt-get install libxml2-utils=2.9.1+dfsg1-3ubuntu4.10
    gem install mdl -v 0.3.1
    sudo apt-get install shellcheck=0.3.3-1~ubuntu14.04.1
    npm install -g eslint babel-eslint@7.2.3
    npm install -g eslint-plugin-react@4.2.3
    gem install yaml-lint -v 0.0.7
    npm install -g dockerlint@0.2.0
    pip install restructuredtext_lint==0.17.2

## run linters
##
## @puppet-lint, the following issue needs to be checked if it has been
##     resolved, so the '--no-ensure_first_param-check' abusive flag
##     implementation (below) can be removed:
##
##     - https://github.com/rodjek/puppet-lint/issues/410
##
else
    CWD=$(pwd)
    flake8 . --max-line-length=100
    scss-lint src/scss/*.scss --config "$TRAVIS_BUILD_DIR/test/lint/.scss-lint.yml"
    bootlint -d W005 interface/templates/*.html
    sudo find puppet/environment/*/manifests -name '*.pp' -type f -exec /opt/puppetlabs/bin/puppet parser validate {} \;
    sudo find puppet/environment/*/modules -name '*.pp' -type f -exec /opt/puppetlabs/bin/puppet parser validate {} \;
    puppet-lint --no-variable_scope-check --no-ensure_first_param-check puppet/environment/*/modules
    find puppet -name Puppetfile -exec sh -c 'cd "${1%/*}" && r10k puppetfile check Puppetfile' _ {} \;
    find interface/static/data/json -name '*.json' -exec jsonlint -q {} \; -print
    find interface/static/data/csv -name '*.csv' -exec csvlint {} \;
    xmllint --noout interface/static/data/xml/svr*.xml --schema interface/static/data/xml/svr.xsd
    xmllint --noout interface/static/data/xml/svm*.xml --schema interface/static/data/xml/svm.xsd
    xmllint --noout interface/static/data/xml/*.xsd
    mdl . --style test/lint/markdown.rb
    find . -type f ! -name '*.erb' -exec grep -l '^#!/bin/bash' {} + | xargs shellcheck
    find . -name '*.sh' -type f -exec shellcheck {} \;
    eslint . --ext=jsx -c test/lint/eslint.json
    yaml-lint hiera/
    yaml-lint *.yaml
    find . -name '*.dockerfile' -type f -exec dockerlint {} \;
    val=$(find doc -name '*.rst' -type f -exec rst-lint {} \;); echo "$val" | (! grep -E 'ERROR'); return $?
    cd "$CWD"
fi
